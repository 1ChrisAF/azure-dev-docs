### YamlMime:FAQ
metadata:
  title: Azure Developer CLI FAQ
  description: Get answers to common questions about Azure Developer CLI.
  ms.date: 04/13/2021
  ms.topic: conceptual
  ms.custom: devx-track-azdev
  ms.prod: azure
title: Common questions about the Azure Developer CLI
summary: This article answers commonly asked questions about the Azure Developer CLI.
sections:
  - name: General
    questions:
      - question: What is environment name?
        answer: |
          The CLI uses the environment name to set the `AZURE_ENV_NAME` environment variable used by az dev enabled templates. AZURE_ENV_NAME is also used as a prefix to Azure resource name including the Azure resource group. Since each environment has its own set of configurations, we keep all configuration files under environment folders. 

          ```	 
          ├── .azure                          [ This folder shows up after you run az dev init or az dev up ]
          │   ├── <your environment1>         [ Folder to house all environment related configurations ]
          │   │   ├── .env                    [ Contains environment variables ]
          │   │   └── main.parameters.json    [ Parameter file ]
          │   └── <your environment2>         [ Folder to house all environment related configurations ]
          │   │   ├── .env                    [ Contains environment variables ]
          │   │   └── main.parameters.json    [ Parameter file ]
          │   └──config.json 
          ```

      - question: Can I set up more than one environment?
        answer: |
          Yes! You can set up different environments (for example, dev, test, prod.) You can use `az dev env` to manage environments.

      - question: Where is the environment configuration (.env) file?
        answer: |
          `<your-project-folder-name>\.azure\<your-environment-name>\.env`

      - question: How is the .env file used?
        answer: |
          `az dev` commands refer to the .env file for environment configuration. Command like `az dev deploy` also updates the .env file with, for example, db connection string and Azure Key Vault end point.
          
      - question: How is azure.yaml used?
        answer: |
          `azure.yaml` describes the application(s) and type of Azure resources included in the template.

  - name: Command: az dev provision
    questions:
      - question: How does the command know what to provision?
        answer: |
          The command uses Bicep templates found under `<your-project-folder-name>/infra` to provision Azure resources 

      - question: Where can I find what are provisioned in Azure?
        answer: |
          Go to https://portal.azure.com, locate your resource group, which is `<your-environment-name>rg`. 

      - question: How do I find more information about Azure errors?
        answer: |
          We use Bicep templates found under `<your-project-folder-name>/infra` to provision Azure resources and include the error message in the cli output if issues. 	
          
          You can also go to https://portal.azure.com, locate your resource group, which is `<your-environment-name>rg`. If any of the deployments fail, click error link to get more information.
          
          More resource: [Troubleshoot common Azure deployment errors - Azure Resource Manager](https://docs.microsoft.com/azure/azure-resource-manager/troubleshooting/common-deployment-errors)

      - question: Is there a log file for `az dev provision`? 
        answer: |
          Coming soon. Feature is planned for future release.

  - name: Command: az dev deploy
    questions:
      - question: Can I rerun this command?
        answer: |
          Yes.

  - name: az dev up
    questions:
      - question: Can I rerun `az dev up`?
        answer: |
          Yes.

      - question: How do I find the log file for `az dev up`? 
        answer: |
          Coming soon. Feature is planned for future release.

  - name: Command: az dev pipeline
    questions:
      - question: What is Azure service principal?
        answer: |
          An Azure service principal is an identity created for use with applications, hosted services, and automated tools to access Azure resources. This access is restricted by the roles assigned to the service principal, giving you control over which resources can be accessed and at which level. Refer to [Connect GitHub and Azure | Microsoft Docs](https://docs.microsoft.com/azure/developer/github/connect-from-azure?tabs=azure-portal%2Cwindows#use-the-azure-login-action-with-a-service-principal-secret) for more on authenticating from Azure to GitHub 

      - question: Do I need to create an Azure service principal before running `az dev pipeline config`?
        answer: |
          No. `az dev pipeline config` takes care of creating the Azure service principal and performing the necessary steps to store the secrets in your GitHub repo.

      - question: What are all the secrets stored in GitHub?
        answer: |
          The command stores four secrets in GitHub: AZURE_CREDENTIALS, AZURE_ENV_NAME, AZURE_LOCATION and AZURE_SUBSCRIPTION_ID. You can override the value of each secret by going to `https://github.com/<your-GH-account>/<your-repo>/secrets/actions`.

      - question: Is [OpenID Connect](https://docs.github.com/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect) supported? 
        answer: |
          No. The support is coming soon.

      - question: How do I reset the Azure service principal stored in GitHub Actions?
        answer: |
          Go to `https://github.com/<your-GH-account>/<your-repo>settings/secrets/actions`, update `AZURE_CREDENTIALS` by copying and pasting the entire JSON object for the new service principal. For example, 

          ```
          {
            "clientId": "<GUID>",
            "clientSecret": "<GUID>",
            "subscriptionId": "<GUID>",
            "tenantId": "<GUID>",
            (...)
          }
          ```

      - question: Where is the GitHub action file?
        answer: |
          `<your-project-folder-name>\.github\workflows\azure-dev.yml`
          
      - question: In `azure-dev.yml` can I deploy just the code in the build step?
        answer: |
          Yes, just replace 
          
          `run: az dev up --no-prompt` 
          
          with 
          
          `run: az dev deploy--noprompt`

      - question: Where can I find the log for the GitHub action job I just triggered after running `az dev workflow`?
        answer: |
          Go to `https://github.com/<your-GH-account>/<your-repo>/actions` and refer to the log file in the workflow run.

